{"version":3,"file":"VideoView.js","sourceRoot":"","sources":["../src/VideoView.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,iBAAiB,MAAM,qBAAqB,CAAC;AACpD,OAAO,eAAe,MAAM,mBAAmB,CAAC;AAGhD,MAAM,UAAU,cAAc,CAAC,SAAwB,IAAI;IACzD,OAAO,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE;QACxB,OAAO,IAAI,iBAAiB,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IACnD,CAAC,EAAE,EAAE,CAAC,CAAC;AACT,CAAC;AAED,MAAM,OAAO,SAAU,SAAQ,KAAK,CAAC,aAAkB;IACrD,MAAM;QACJ,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,GAAG,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QACnD,MAAM,QAAQ,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC;QAErC,OAAO,oBAAC,eAAe,OAAK,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,EAAE,SAAS,GAAI,CAAC;IAC1E,CAAC;CACF;AAED,gFAAgF;AAChF,gEAAgE;AAChE,yEAAyE;AACzE,SAAS,WAAW,CAAC,MAA4B;IAC/C,IAAI,MAAM,YAAY,iBAAiB,CAAC,WAAW,EAAE;QACnD,mBAAmB;QACnB,OAAO,MAAM,CAAC,yBAAyB,CAAC;KACzC;IACD,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;QAC9B,OAAO,MAAM,CAAC;KACf;IACD,OAAO,IAAI,CAAC;AACd,CAAC","sourcesContent":["import React from 'react';\n\nimport NativeVideoModule from './NativeVideoModule';\nimport NativeVideoView from './NativeVideoView';\nimport { VideoPlayer } from './VideoPlayer';\n\nexport function useVideoPlayer(source: string | null = null): VideoPlayer {\n  return React.useMemo(() => {\n    return new NativeVideoModule.VideoPlayer(source);\n  }, []);\n}\n\nexport class VideoView extends React.PureComponent<any> {\n  render(): React.ReactNode {\n    const { nativeRef, player, ...props } = this.props;\n    const playerId = getPlayerId(player);\n\n    return <NativeVideoView {...props} player={playerId} ref={nativeRef} />;\n  }\n}\n\n// Temporary solution to pass the shared object ID instead of the player object.\n// We can't really pass it as an object in the old architecture.\n// Technically we can in the new architecture, but it's not possible yet.\nfunction getPlayerId(player: number | VideoPlayer): number | null {\n  if (player instanceof NativeVideoModule.VideoPlayer) {\n    // @ts-expect-error\n    return player.__expo_shared_object_id__;\n  }\n  if (typeof player === 'number') {\n    return player;\n  }\n  return null;\n}\n"]}